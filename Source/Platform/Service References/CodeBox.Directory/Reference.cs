// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Tools.TeamMate.Platform.CodeBox.Directory
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://CodeBox/services/DirectoryService/v1.0", ConfigurationName="CodeBox.Directory.DirectoryServiceSoap")]
    public interface DirectoryServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEntries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntries", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntriesByGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEntriesByGroup(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntriesByGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesByGroupAsync(string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetTags", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTags(string[] entryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetTags", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTagsAsync(string[] entryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntriesByTags", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEntriesByTags(string[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntriesByTags", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesByTagsAsync(string[] tags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntryByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEntryByName(string entryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntryByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntryByNameAsync(string entryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetCategories", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCategories(string[] entryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetCategories", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync(string[] entryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntriesByCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetEntriesByCategory(string[] categoryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/GetEntriesByCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesByCategoryAsync(string[] categoryNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/Ping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://CodeBox/services/DirectoryService/v1.0/Ping", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DirectoryServiceSoapChannel : Microsoft.Tools.TeamMate.Platform.CodeBox.Directory.DirectoryServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirectoryServiceSoapClient : System.ServiceModel.ClientBase<Microsoft.Tools.TeamMate.Platform.CodeBox.Directory.DirectoryServiceSoap>, Microsoft.Tools.TeamMate.Platform.CodeBox.Directory.DirectoryServiceSoap {
        
        public DirectoryServiceSoapClient() {
        }
        
        public DirectoryServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DirectoryServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectoryServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DirectoryServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetEntries() {
            return base.Channel.GetEntries();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesAsync() {
            return base.Channel.GetEntriesAsync();
        }
        
        public System.Data.DataSet GetGroups() {
            return base.Channel.GetGroups();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetGroupsAsync() {
            return base.Channel.GetGroupsAsync();
        }
        
        public System.Data.DataSet GetEntriesByGroup(string groupName) {
            return base.Channel.GetEntriesByGroup(groupName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesByGroupAsync(string groupName) {
            return base.Channel.GetEntriesByGroupAsync(groupName);
        }
        
        public System.Data.DataSet GetTags(string[] entryNames) {
            return base.Channel.GetTags(entryNames);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTagsAsync(string[] entryNames) {
            return base.Channel.GetTagsAsync(entryNames);
        }
        
        public System.Data.DataSet GetEntriesByTags(string[] tags) {
            return base.Channel.GetEntriesByTags(tags);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesByTagsAsync(string[] tags) {
            return base.Channel.GetEntriesByTagsAsync(tags);
        }
        
        public System.Data.DataSet GetEntryByName(string entryName) {
            return base.Channel.GetEntryByName(entryName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntryByNameAsync(string entryName) {
            return base.Channel.GetEntryByNameAsync(entryName);
        }
        
        public System.Data.DataSet GetCategories(string[] entryNames) {
            return base.Channel.GetCategories(entryNames);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCategoriesAsync(string[] entryNames) {
            return base.Channel.GetCategoriesAsync(entryNames);
        }
        
        public System.Data.DataSet GetEntriesByCategory(string[] categoryNames) {
            return base.Channel.GetEntriesByCategory(categoryNames);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntriesByCategoryAsync(string[] categoryNames) {
            return base.Channel.GetEntriesByCategoryAsync(categoryNames);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
