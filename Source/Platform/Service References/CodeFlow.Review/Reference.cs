//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Tools.TeamMate.Platform.CodeFlow.Review {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeReviewSummary", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class CodeReviewSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AuthorLoginField;
        
        private string KeyField;
        
        private System.DateTime LastUpdatedOnField;
        
        private string NameField;
        
        private string ProjectShortNameField;
        
        private int RevisionField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CompletedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IterationCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] ReviewersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] WorkItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AuthorLogin {
            get {
                return this.AuthorLoginField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorLoginField, value) != true)) {
                    this.AuthorLoginField = value;
                    this.RaisePropertyChanged("AuthorLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProjectShortName {
            get {
                return this.ProjectShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectShortNameField, value) != true)) {
                    this.ProjectShortNameField = value;
                    this.RaisePropertyChanged("ProjectShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime CompletedOn {
            get {
                return this.CompletedOnField;
            }
            set {
                if ((this.CompletedOnField.Equals(value) != true)) {
                    this.CompletedOnField = value;
                    this.RaisePropertyChanged("CompletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int IterationCount {
            get {
                return this.IterationCountField;
            }
            set {
                if ((this.IterationCountField.Equals(value) != true)) {
                    this.IterationCountField = value;
                    this.RaisePropertyChanged("IterationCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] Reviewers {
            get {
                return this.ReviewersField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewersField, value) != true)) {
                    this.ReviewersField = value;
                    this.RaisePropertyChanged("Reviewers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] WorkItems {
            get {
                return this.WorkItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkItemsField, value) != true)) {
                    this.WorkItemsField = value;
                    this.RaisePropertyChanged("WorkItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Author", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DisplayNameField;
        
        private string EmailAddressField;
        
        private System.DateTime LastUpdatedOnField;
        
        private string NameField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuthorStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuthorStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeReviewStatus", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum CodeReviewStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aborted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reviewer", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class Reviewer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DisplayNameField;
        
        private string EmailAddressField;
        
        private System.DateTime LastUpdatedOnField;
        
        private string NameField;
        
        private bool RequiredField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewerStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool Required {
            get {
                return this.RequiredField;
            }
            set {
                if ((this.RequiredField.Equals(value) != true)) {
                    this.RequiredField = value;
                    this.RaisePropertyChanged("Required");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewerStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkItem", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class WorkItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string idField;
        
        private string titleField;
        
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri uriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri uri {
            get {
                return this.uriField;
            }
            set {
                if ((object.ReferenceEquals(this.uriField, value) != true)) {
                    this.uriField = value;
                    this.RaisePropertyChanged("uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorStatus", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum AuthorStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Preparing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiting = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewerStatus", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum ReviewerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotStarted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reviewing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiting = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedOff = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InviteOnly = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeReview", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class CodeReview : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author AuthorField;
        
        private string KeyField;
        
        private string NameField;
        
        private string ProjectShortNameField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewStatus StatusField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeFlowVersion VersionField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage[] codePackagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] relatedWorkItemsField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] reviewersField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread[] threadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> CustomDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuditLog AuditLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompletionMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ProjectShortName {
            get {
                return this.ProjectShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectShortNameField, value) != true)) {
                    this.ProjectShortNameField = value;
                    this.RaisePropertyChanged("ProjectShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeFlowVersion Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage[] codePackages {
            get {
                return this.codePackagesField;
            }
            set {
                if ((object.ReferenceEquals(this.codePackagesField, value) != true)) {
                    this.codePackagesField = value;
                    this.RaisePropertyChanged("codePackages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] relatedWorkItems {
            get {
                return this.relatedWorkItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.relatedWorkItemsField, value) != true)) {
                    this.relatedWorkItemsField = value;
                    this.RaisePropertyChanged("relatedWorkItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] reviewers {
            get {
                return this.reviewersField;
            }
            set {
                if ((object.ReferenceEquals(this.reviewersField, value) != true)) {
                    this.reviewersField = value;
                    this.RaisePropertyChanged("reviewers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread[] threads {
            get {
                return this.threadsField;
            }
            set {
                if ((object.ReferenceEquals(this.threadsField, value) != true)) {
                    this.threadsField = value;
                    this.RaisePropertyChanged("threads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Collections.Generic.Dictionary<string, string> CustomData {
            get {
                return this.CustomDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDataField, value) != true)) {
                    this.CustomDataField = value;
                    this.RaisePropertyChanged("CustomData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuditLog AuditLog {
            get {
                return this.AuditLogField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditLogField, value) != true)) {
                    this.AuditLogField = value;
                    this.RaisePropertyChanged("AuditLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string CompletionMessage {
            get {
                return this.CompletionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletionMessageField, value) != true)) {
                    this.CompletionMessageField = value;
                    this.RaisePropertyChanged("CompletionMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodeFlowVersion", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class CodeFlowVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CompletedOnField;
        
        private System.DateTime CreatedOnField;
        
        private System.DateTime LastAccessedOnField;
        
        private System.DateTime LastModifiedOnField;
        
        private int RevisionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CompletedOn {
            get {
                return this.CompletedOnField;
            }
            set {
                if ((this.CompletedOnField.Equals(value) != true)) {
                    this.CompletedOnField = value;
                    this.RaisePropertyChanged("CompletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastAccessedOn {
            get {
                return this.LastAccessedOnField;
            }
            set {
                if ((this.LastAccessedOnField.Equals(value) != true)) {
                    this.LastAccessedOnField = value;
                    this.RaisePropertyChanged("LastAccessedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastModifiedOn {
            get {
                return this.LastModifiedOnField;
            }
            set {
                if ((this.LastModifiedOnField.Equals(value) != true)) {
                    this.LastModifiedOnField = value;
                    this.RaisePropertyChanged("LastModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditLog", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class AuditLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] EventsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string[] Events {
            get {
                return this.EventsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsField, value) != true)) {
                    this.EventsField = value;
                    this.RaisePropertyChanged("Events");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePackage", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class CodePackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AuthorField;
        
        private string DescriptionField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageFormat FormatField;
        
        private System.Uri LocationField;
        
        private string NameField;
        
        private int RevisionField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageStatus StatusField;
        
        private System.DateTime SubmittedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.FileChange[] FileChangesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageSourceInfo SourceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IterationCommentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageFormat Format {
            get {
                return this.FormatField;
            }
            set {
                if ((this.FormatField.Equals(value) != true)) {
                    this.FormatField = value;
                    this.RaisePropertyChanged("Format");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Uri Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime SubmittedOn {
            get {
                return this.SubmittedOnField;
            }
            set {
                if ((this.SubmittedOnField.Equals(value) != true)) {
                    this.SubmittedOnField = value;
                    this.RaisePropertyChanged("SubmittedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.FileChange[] FileChanges {
            get {
                return this.FileChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.FileChangesField, value) != true)) {
                    this.FileChangesField = value;
                    this.RaisePropertyChanged("FileChanges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageSourceInfo SourceInfo {
            get {
                return this.SourceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceInfoField, value) != true)) {
                    this.SourceInfoField = value;
                    this.RaisePropertyChanged("SourceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string UserAgent {
            get {
                return this.UserAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.UserAgentField, value) != true)) {
                    this.UserAgentField = value;
                    this.RaisePropertyChanged("UserAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string IterationComment {
            get {
                return this.IterationCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.IterationCommentField, value) != true)) {
                    this.IterationCommentField = value;
                    this.RaisePropertyChanged("IterationComment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentThread", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class CommentThread : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.DiffContext ContextField;
        
        private int IdField;
        
        private int LastRevisionField;
        
        private System.DateTime LastUpdatedOnField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentScope LevelField;
        
        private int ParentThreadIdField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment RootField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThreadStatus StatusField;
        
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WithdrawnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.DiffContext Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int LastRevision {
            get {
                return this.LastRevisionField;
            }
            set {
                if ((this.LastRevisionField.Equals(value) != true)) {
                    this.LastRevisionField = value;
                    this.RaisePropertyChanged("LastRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastUpdatedOn {
            get {
                return this.LastUpdatedOnField;
            }
            set {
                if ((this.LastUpdatedOnField.Equals(value) != true)) {
                    this.LastUpdatedOnField = value;
                    this.RaisePropertyChanged("LastUpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentScope Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ParentThreadId {
            get {
                return this.ParentThreadIdField;
            }
            set {
                if ((this.ParentThreadIdField.Equals(value) != true)) {
                    this.ParentThreadIdField = value;
                    this.RaisePropertyChanged("ParentThreadId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment Root {
            get {
                return this.RootField;
            }
            set {
                if ((object.ReferenceEquals(this.RootField, value) != true)) {
                    this.RootField = value;
                    this.RaisePropertyChanged("Root");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThreadStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool Withdrawn {
            get {
                return this.WithdrawnField;
            }
            set {
                if ((this.WithdrawnField.Equals(value) != true)) {
                    this.WithdrawnField = value;
                    this.RaisePropertyChanged("Withdrawn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePackageSourceInfo", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class CodePackageSourceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ClientNameField;
        
        private string ServerUriField;
        
        private string SourceControlSystemField;
        
        private string SourceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ServerUri {
            get {
                return this.ServerUriField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerUriField, value) != true)) {
                    this.ServerUriField = value;
                    this.RaisePropertyChanged("ServerUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SourceControlSystem {
            get {
                return this.SourceControlSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceControlSystemField, value) != true)) {
                    this.SourceControlSystemField = value;
                    this.RaisePropertyChanged("SourceControlSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SourceName {
            get {
                return this.SourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceNameField, value) != true)) {
                    this.SourceNameField = value;
                    this.RaisePropertyChanged("SourceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePackageFormat", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum CodePackageFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TeamFoundationServerShelveSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceDepotPack = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePackageStatus", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum CodePackageStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Submitted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Revoked = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileChange", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class FileChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ChangeTypeField;
        
        private string DepotFilePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ChangeType {
            get {
                return this.ChangeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTypeField, value) != true)) {
                    this.ChangeTypeField = value;
                    this.RaisePropertyChanged("ChangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DepotFilePath {
            get {
                return this.DepotFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.DepotFilePathField, value) != true)) {
                    this.DepotFilePathField = value;
                    this.RaisePropertyChanged("DepotFilePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiffContext", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class DiffContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CorrelationDataField;
        
        private string LeftCodePackageNameField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.FileRegion RegionField;
        
        private string RightCodePackageNameField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentViewContext ViewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CorrelationData {
            get {
                return this.CorrelationDataField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrelationDataField, value) != true)) {
                    this.CorrelationDataField = value;
                    this.RaisePropertyChanged("CorrelationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LeftCodePackageName {
            get {
                return this.LeftCodePackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LeftCodePackageNameField, value) != true)) {
                    this.LeftCodePackageNameField = value;
                    this.RaisePropertyChanged("LeftCodePackageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.FileRegion Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string RightCodePackageName {
            get {
                return this.RightCodePackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RightCodePackageNameField, value) != true)) {
                    this.RightCodePackageNameField = value;
                    this.RaisePropertyChanged("RightCodePackageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentViewContext View {
            get {
                return this.ViewField;
            }
            set {
                if ((this.ViewField.Equals(value) != true)) {
                    this.ViewField = value;
                    this.RaisePropertyChanged("View");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreatedOnField;
        
        private int IdField;
        
        private int ParentIdField;
        
        private string ReviewerField;
        
        private string TextField;
        
        private int ThreadIdField;
        
        private Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment[] childrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WithdrawnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Reviewer {
            get {
                return this.ReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewerField, value) != true)) {
                    this.ReviewerField = value;
                    this.RaisePropertyChanged("Reviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ThreadId {
            get {
                return this.ThreadIdField;
            }
            set {
                if ((this.ThreadIdField.Equals(value) != true)) {
                    this.ThreadIdField = value;
                    this.RaisePropertyChanged("ThreadId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment[] children {
            get {
                return this.childrenField;
            }
            set {
                if ((object.ReferenceEquals(this.childrenField, value) != true)) {
                    this.childrenField = value;
                    this.RaisePropertyChanged("children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public bool Withdrawn {
            get {
                return this.WithdrawnField;
            }
            set {
                if ((this.WithdrawnField.Equals(value) != true)) {
                    this.WithdrawnField = value;
                    this.RaisePropertyChanged("Withdrawn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentScope", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum CommentScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Global = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentThreadStatus", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum CommentThreadStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resolved = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WontFix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileRegion", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class FileRegion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int EndCharPosField;
        
        private int EndLineField;
        
        private string FileNameField;
        
        private int StartCharPosField;
        
        private int StartLineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int EndCharPos {
            get {
                return this.EndCharPosField;
            }
            set {
                if ((this.EndCharPosField.Equals(value) != true)) {
                    this.EndCharPosField = value;
                    this.RaisePropertyChanged("EndCharPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int EndLine {
            get {
                return this.EndLineField;
            }
            set {
                if ((this.EndLineField.Equals(value) != true)) {
                    this.EndLineField = value;
                    this.RaisePropertyChanged("EndLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int StartCharPos {
            get {
                return this.StartCharPosField;
            }
            set {
                if ((this.StartCharPosField.Equals(value) != true)) {
                    this.StartCharPosField = value;
                    this.RaisePropertyChanged("StartCharPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int StartLine {
            get {
                return this.StartLineField;
            }
            set {
                if ((this.StartLineField.Equals(value) != true)) {
                    this.StartLineField = value;
                    this.RaisePropertyChanged("StartLine");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentViewContext", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum CommentViewContext : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeftOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightOnly = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewUpdateCode", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
    public enum ReviewUpdateCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentsOnly = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CodeFlow.Review.IReviewService")]
    public interface IReviewService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetActiveReviewsForReviewer", ReplyAction="http://tempuri.org/IReviewService/GetActiveReviewsForReviewerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/GetActiveReviewsForReviewerServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[] GetActiveReviewsForReviewer(string reviewerLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetActiveReviewsForReviewer", ReplyAction="http://tempuri.org/IReviewService/GetActiveReviewsForReviewerResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[]> GetActiveReviewsForReviewerAsync(string reviewerLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetActiveReviewsForProject", ReplyAction="http://tempuri.org/IReviewService/GetActiveReviewsForProjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/GetActiveReviewsForProjectServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[] GetActiveReviewsForProject(string projectShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetActiveReviewsForProject", ReplyAction="http://tempuri.org/IReviewService/GetActiveReviewsForProjectResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[]> GetActiveReviewsForProjectAsync(string projectShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetActiveReviewsForAuthor", ReplyAction="http://tempuri.org/IReviewService/GetActiveReviewsForAuthorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/GetActiveReviewsForAuthorServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[] GetActiveReviewsForAuthor(string authorLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetActiveReviewsForAuthor", ReplyAction="http://tempuri.org/IReviewService/GetActiveReviewsForAuthorResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[]> GetActiveReviewsForAuthorAsync(string authorLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/CreateReview", ReplyAction="http://tempuri.org/IReviewService/CreateReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/CreateReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview CreateReview(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author author, string reviewName, string projectShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/CreateReview", ReplyAction="http://tempuri.org/IReviewService/CreateReviewResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> CreateReviewAsync(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author author, string reviewName, string projectShortName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/SetTitle", ReplyAction="http://tempuri.org/IReviewService/SetTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/SetTitleServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void SetTitle(string codeReviewKey, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/SetTitle", ReplyAction="http://tempuri.org/IReviewService/SetTitleResponse")]
        System.Threading.Tasks.Task SetTitleAsync(string codeReviewKey, string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/PublishReview", ReplyAction="http://tempuri.org/IReviewService/PublishReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/PublishReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview PublishReview(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/PublishReview", ReplyAction="http://tempuri.org/IReviewService/PublishReviewResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> PublishReviewAsync(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/CompleteReview", ReplyAction="http://tempuri.org/IReviewService/CompleteReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/CompleteReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview CompleteReview(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/CompleteReview", ReplyAction="http://tempuri.org/IReviewService/CompleteReviewResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> CompleteReviewAsync(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/ExpireReview", ReplyAction="http://tempuri.org/IReviewService/ExpireReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/ExpireReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview ExpireReview(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/ExpireReview", ReplyAction="http://tempuri.org/IReviewService/ExpireReviewResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> ExpireReviewAsync(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/WithdrawReview", ReplyAction="http://tempuri.org/IReviewService/WithdrawReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/WithdrawReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview WithdrawReview(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/WithdrawReview", ReplyAction="http://tempuri.org/IReviewService/WithdrawReviewResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> WithdrawReviewAsync(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/ReactivateReview", ReplyAction="http://tempuri.org/IReviewService/ReactivateReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/ReactivateReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void ReactivateReview(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/ReactivateReview", ReplyAction="http://tempuri.org/IReviewService/ReactivateReviewResponse")]
        System.Threading.Tasks.Task ReactivateReviewAsync(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/DeleteReview", ReplyAction="http://tempuri.org/IReviewService/DeleteReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/DeleteReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void DeleteReview(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/DeleteReview", ReplyAction="http://tempuri.org/IReviewService/DeleteReviewResponse")]
        System.Threading.Tasks.Task DeleteReviewAsync(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddAuditLogEvent", ReplyAction="http://tempuri.org/IReviewService/AddAuditLogEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/AddAuditLogEventServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void AddAuditLogEvent(string codeReviewKey, string user, string eventName, string message, System.Collections.Generic.Dictionary<string, string> arguments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddAuditLogEvent", ReplyAction="http://tempuri.org/IReviewService/AddAuditLogEventResponse")]
        System.Threading.Tasks.Task AddAuditLogEventAsync(string codeReviewKey, string user, string eventName, string message, System.Collections.Generic.Dictionary<string, string> arguments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/SetCustomData", ReplyAction="http://tempuri.org/IReviewService/SetCustomDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/SetCustomDataServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void SetCustomData(string codeReviewKey, System.Collections.Generic.Dictionary<string, string> customDataToSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/SetCustomData", ReplyAction="http://tempuri.org/IReviewService/SetCustomDataResponse")]
        System.Threading.Tasks.Task SetCustomDataAsync(string codeReviewKey, System.Collections.Generic.Dictionary<string, string> customDataToSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/SetWorkItems", ReplyAction="http://tempuri.org/IReviewService/SetWorkItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/SetWorkItemsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void SetWorkItems(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] workItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/SetWorkItems", ReplyAction="http://tempuri.org/IReviewService/SetWorkItemsResponse")]
        System.Threading.Tasks.Task SetWorkItemsAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] workItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetReview", ReplyAction="http://tempuri.org/IReviewService/GetReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/GetReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview GetReview(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetReview", ReplyAction="http://tempuri.org/IReviewService/GetReviewResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> GetReviewAsync(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/CheckUpdates", ReplyAction="http://tempuri.org/IReviewService/CheckUpdatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/CheckUpdatesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewUpdateCode CheckUpdates(string codeReviewKey, int currRevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/CheckUpdates", ReplyAction="http://tempuri.org/IReviewService/CheckUpdatesResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewUpdateCode> CheckUpdatesAsync(string codeReviewKey, int currRevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/PokeReview", ReplyAction="http://tempuri.org/IReviewService/PokeReviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/PokeReviewServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void PokeReview(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/PokeReview", ReplyAction="http://tempuri.org/IReviewService/PokeReviewResponse")]
        System.Threading.Tasks.Task PokeReviewAsync(string codeReviewKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddCodePackage", ReplyAction="http://tempuri.org/IReviewService/AddCodePackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/AddCodePackageServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage AddCodePackage(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddCodePackage", ReplyAction="http://tempuri.org/IReviewService/AddCodePackageResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage> AddCodePackageAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateCodePackage", ReplyAction="http://tempuri.org/IReviewService/UpdateCodePackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/UpdateCodePackageServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void UpdateCodePackage(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateCodePackage", ReplyAction="http://tempuri.org/IReviewService/UpdateCodePackageResponse")]
        System.Threading.Tasks.Task UpdateCodePackageAsync(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateCodePackageStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateCodePackageStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/UpdateCodePackageStatusServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void UpdateCodePackageStatus(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateCodePackageStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateCodePackageStatusResponse")]
        System.Threading.Tasks.Task UpdateCodePackageStatusAsync(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddComment", ReplyAction="http://tempuri.org/IReviewService/AddCommentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/AddCommentServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment AddComment(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddComment", ReplyAction="http://tempuri.org/IReviewService/AddCommentResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment> AddCommentAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/StartCommentThread", ReplyAction="http://tempuri.org/IReviewService/StartCommentThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/StartCommentThreadServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread StartCommentThread(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread thread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/StartCommentThread", ReplyAction="http://tempuri.org/IReviewService/StartCommentThreadResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread> StartCommentThreadAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread thread);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/WithdrawCommentThread", ReplyAction="http://tempuri.org/IReviewService/WithdrawCommentThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/WithdrawCommentThreadServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void WithdrawCommentThread(string codeReviewKey, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/WithdrawCommentThread", ReplyAction="http://tempuri.org/IReviewService/WithdrawCommentThreadResponse")]
        System.Threading.Tasks.Task WithdrawCommentThreadAsync(string codeReviewKey, int threadId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/WithdrawComment", ReplyAction="http://tempuri.org/IReviewService/WithdrawCommentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/WithdrawCommentServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void WithdrawComment(string codeReviewKey, int commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/WithdrawComment", ReplyAction="http://tempuri.org/IReviewService/WithdrawCommentResponse")]
        System.Threading.Tasks.Task WithdrawCommentAsync(string codeReviewKey, int commentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateCommentThreadStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateCommentThreadStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/UpdateCommentThreadStatusServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void UpdateCommentThreadStatus(string codeReviewKey, int threadId, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThreadStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateCommentThreadStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateCommentThreadStatusResponse")]
        System.Threading.Tasks.Task UpdateCommentThreadStatusAsync(string codeReviewKey, int threadId, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThreadStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetReviewComments", ReplyAction="http://tempuri.org/IReviewService/GetReviewCommentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/GetReviewCommentsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread[] GetReviewComments(string codeReviewKey, int currRevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/GetReviewComments", ReplyAction="http://tempuri.org/IReviewService/GetReviewCommentsResponse")]
        System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread[]> GetReviewCommentsAsync(string codeReviewKey, int currRevision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddReviewers", ReplyAction="http://tempuri.org/IReviewService/AddReviewersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/AddReviewersServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void AddReviewers(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] reviewers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AddReviewers", ReplyAction="http://tempuri.org/IReviewService/AddReviewersResponse")]
        System.Threading.Tasks.Task AddReviewersAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] reviewers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/RemoveReviewers", ReplyAction="http://tempuri.org/IReviewService/RemoveReviewersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/RemoveReviewersServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void RemoveReviewers(string codeReviewKey, string[] reviewerNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/RemoveReviewers", ReplyAction="http://tempuri.org/IReviewService/RemoveReviewersResponse")]
        System.Threading.Tasks.Task RemoveReviewersAsync(string codeReviewKey, string[] reviewerNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateReviewerStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateReviewerStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/UpdateReviewerStatusServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void UpdateReviewerStatus(string codeReviewKey, string reviewerName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewerStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateReviewerStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateReviewerStatusResponse")]
        System.Threading.Tasks.Task UpdateReviewerStatusAsync(string codeReviewKey, string reviewerName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewerStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateAuthorStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateAuthorStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/UpdateAuthorStatusServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void UpdateAuthorStatus(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuthorStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/UpdateAuthorStatus", ReplyAction="http://tempuri.org/IReviewService/UpdateAuthorStatusResponse")]
        System.Threading.Tasks.Task UpdateAuthorStatusAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuthorStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AuthorPing", ReplyAction="http://tempuri.org/IReviewService/AuthorPingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ServiceFault), Action="http://tempuri.org/IReviewService/AuthorPingServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.CodeFlow.ServiceModel")]
        void AuthorPing(string codeReviewKey, string messageFromAuthor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReviewService/AuthorPing", ReplyAction="http://tempuri.org/IReviewService/AuthorPingResponse")]
        System.Threading.Tasks.Task AuthorPingAsync(string codeReviewKey, string messageFromAuthor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReviewServiceChannel : Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.IReviewService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReviewServiceClient : System.ServiceModel.ClientBase<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.IReviewService>, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.IReviewService {
        
        public ReviewServiceClient() {
        }
        
        public ReviewServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReviewServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReviewServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReviewServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[] GetActiveReviewsForReviewer(string reviewerLogin) {
            return base.Channel.GetActiveReviewsForReviewer(reviewerLogin);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[]> GetActiveReviewsForReviewerAsync(string reviewerLogin) {
            return base.Channel.GetActiveReviewsForReviewerAsync(reviewerLogin);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[] GetActiveReviewsForProject(string projectShortName) {
            return base.Channel.GetActiveReviewsForProject(projectShortName);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[]> GetActiveReviewsForProjectAsync(string projectShortName) {
            return base.Channel.GetActiveReviewsForProjectAsync(projectShortName);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[] GetActiveReviewsForAuthor(string authorLogin) {
            return base.Channel.GetActiveReviewsForAuthor(authorLogin);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReviewSummary[]> GetActiveReviewsForAuthorAsync(string authorLogin) {
            return base.Channel.GetActiveReviewsForAuthorAsync(authorLogin);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview CreateReview(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author author, string reviewName, string projectShortName) {
            return base.Channel.CreateReview(author, reviewName, projectShortName);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> CreateReviewAsync(Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Author author, string reviewName, string projectShortName) {
            return base.Channel.CreateReviewAsync(author, reviewName, projectShortName);
        }
        
        public void SetTitle(string codeReviewKey, string title) {
            base.Channel.SetTitle(codeReviewKey, title);
        }
        
        public System.Threading.Tasks.Task SetTitleAsync(string codeReviewKey, string title) {
            return base.Channel.SetTitleAsync(codeReviewKey, title);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview PublishReview(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.PublishReview(codeReviewKey, messageFromAuthor);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> PublishReviewAsync(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.PublishReviewAsync(codeReviewKey, messageFromAuthor);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview CompleteReview(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.CompleteReview(codeReviewKey, messageFromAuthor);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> CompleteReviewAsync(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.CompleteReviewAsync(codeReviewKey, messageFromAuthor);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview ExpireReview(string codeReviewKey) {
            return base.Channel.ExpireReview(codeReviewKey);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> ExpireReviewAsync(string codeReviewKey) {
            return base.Channel.ExpireReviewAsync(codeReviewKey);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview WithdrawReview(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.WithdrawReview(codeReviewKey, messageFromAuthor);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> WithdrawReviewAsync(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.WithdrawReviewAsync(codeReviewKey, messageFromAuthor);
        }
        
        public void ReactivateReview(string codeReviewKey, string messageFromAuthor) {
            base.Channel.ReactivateReview(codeReviewKey, messageFromAuthor);
        }
        
        public System.Threading.Tasks.Task ReactivateReviewAsync(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.ReactivateReviewAsync(codeReviewKey, messageFromAuthor);
        }
        
        public void DeleteReview(string codeReviewKey) {
            base.Channel.DeleteReview(codeReviewKey);
        }
        
        public System.Threading.Tasks.Task DeleteReviewAsync(string codeReviewKey) {
            return base.Channel.DeleteReviewAsync(codeReviewKey);
        }
        
        public void AddAuditLogEvent(string codeReviewKey, string user, string eventName, string message, System.Collections.Generic.Dictionary<string, string> arguments) {
            base.Channel.AddAuditLogEvent(codeReviewKey, user, eventName, message, arguments);
        }
        
        public System.Threading.Tasks.Task AddAuditLogEventAsync(string codeReviewKey, string user, string eventName, string message, System.Collections.Generic.Dictionary<string, string> arguments) {
            return base.Channel.AddAuditLogEventAsync(codeReviewKey, user, eventName, message, arguments);
        }
        
        public void SetCustomData(string codeReviewKey, System.Collections.Generic.Dictionary<string, string> customDataToSet) {
            base.Channel.SetCustomData(codeReviewKey, customDataToSet);
        }
        
        public System.Threading.Tasks.Task SetCustomDataAsync(string codeReviewKey, System.Collections.Generic.Dictionary<string, string> customDataToSet) {
            return base.Channel.SetCustomDataAsync(codeReviewKey, customDataToSet);
        }
        
        public void SetWorkItems(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] workItems) {
            base.Channel.SetWorkItems(codeReviewKey, workItems);
        }
        
        public System.Threading.Tasks.Task SetWorkItemsAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.WorkItem[] workItems) {
            return base.Channel.SetWorkItemsAsync(codeReviewKey, workItems);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview GetReview(string codeReviewKey) {
            return base.Channel.GetReview(codeReviewKey);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodeReview> GetReviewAsync(string codeReviewKey) {
            return base.Channel.GetReviewAsync(codeReviewKey);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewUpdateCode CheckUpdates(string codeReviewKey, int currRevision) {
            return base.Channel.CheckUpdates(codeReviewKey, currRevision);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewUpdateCode> CheckUpdatesAsync(string codeReviewKey, int currRevision) {
            return base.Channel.CheckUpdatesAsync(codeReviewKey, currRevision);
        }
        
        public void PokeReview(string codeReviewKey) {
            base.Channel.PokeReview(codeReviewKey);
        }
        
        public System.Threading.Tasks.Task PokeReviewAsync(string codeReviewKey) {
            return base.Channel.PokeReviewAsync(codeReviewKey);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage AddCodePackage(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage) {
            return base.Channel.AddCodePackage(codeReviewKey, codePackage);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage> AddCodePackageAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage) {
            return base.Channel.AddCodePackageAsync(codeReviewKey, codePackage);
        }
        
        public void UpdateCodePackage(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage) {
            base.Channel.UpdateCodePackage(codeReviewKey, codePackageName, codePackage);
        }
        
        public System.Threading.Tasks.Task UpdateCodePackageAsync(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackage codePackage) {
            return base.Channel.UpdateCodePackageAsync(codeReviewKey, codePackageName, codePackage);
        }
        
        public void UpdateCodePackageStatus(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageStatus status) {
            base.Channel.UpdateCodePackageStatus(codeReviewKey, codePackageName, status);
        }
        
        public System.Threading.Tasks.Task UpdateCodePackageStatusAsync(string codeReviewKey, string codePackageName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CodePackageStatus status) {
            return base.Channel.UpdateCodePackageStatusAsync(codeReviewKey, codePackageName, status);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment AddComment(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment comment) {
            return base.Channel.AddComment(codeReviewKey, comment);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment> AddCommentAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Comment comment) {
            return base.Channel.AddCommentAsync(codeReviewKey, comment);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread StartCommentThread(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread thread) {
            return base.Channel.StartCommentThread(codeReviewKey, thread);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread> StartCommentThreadAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread thread) {
            return base.Channel.StartCommentThreadAsync(codeReviewKey, thread);
        }
        
        public void WithdrawCommentThread(string codeReviewKey, int threadId) {
            base.Channel.WithdrawCommentThread(codeReviewKey, threadId);
        }
        
        public System.Threading.Tasks.Task WithdrawCommentThreadAsync(string codeReviewKey, int threadId) {
            return base.Channel.WithdrawCommentThreadAsync(codeReviewKey, threadId);
        }
        
        public void WithdrawComment(string codeReviewKey, int commentId) {
            base.Channel.WithdrawComment(codeReviewKey, commentId);
        }
        
        public System.Threading.Tasks.Task WithdrawCommentAsync(string codeReviewKey, int commentId) {
            return base.Channel.WithdrawCommentAsync(codeReviewKey, commentId);
        }
        
        public void UpdateCommentThreadStatus(string codeReviewKey, int threadId, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThreadStatus status) {
            base.Channel.UpdateCommentThreadStatus(codeReviewKey, threadId, status);
        }
        
        public System.Threading.Tasks.Task UpdateCommentThreadStatusAsync(string codeReviewKey, int threadId, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThreadStatus status) {
            return base.Channel.UpdateCommentThreadStatusAsync(codeReviewKey, threadId, status);
        }
        
        public Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread[] GetReviewComments(string codeReviewKey, int currRevision) {
            return base.Channel.GetReviewComments(codeReviewKey, currRevision);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.CommentThread[]> GetReviewCommentsAsync(string codeReviewKey, int currRevision) {
            return base.Channel.GetReviewCommentsAsync(codeReviewKey, currRevision);
        }
        
        public void AddReviewers(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] reviewers) {
            base.Channel.AddReviewers(codeReviewKey, reviewers);
        }
        
        public System.Threading.Tasks.Task AddReviewersAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.Reviewer[] reviewers) {
            return base.Channel.AddReviewersAsync(codeReviewKey, reviewers);
        }
        
        public void RemoveReviewers(string codeReviewKey, string[] reviewerNames) {
            base.Channel.RemoveReviewers(codeReviewKey, reviewerNames);
        }
        
        public System.Threading.Tasks.Task RemoveReviewersAsync(string codeReviewKey, string[] reviewerNames) {
            return base.Channel.RemoveReviewersAsync(codeReviewKey, reviewerNames);
        }
        
        public void UpdateReviewerStatus(string codeReviewKey, string reviewerName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewerStatus status) {
            base.Channel.UpdateReviewerStatus(codeReviewKey, reviewerName, status);
        }
        
        public System.Threading.Tasks.Task UpdateReviewerStatusAsync(string codeReviewKey, string reviewerName, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.ReviewerStatus status) {
            return base.Channel.UpdateReviewerStatusAsync(codeReviewKey, reviewerName, status);
        }
        
        public void UpdateAuthorStatus(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuthorStatus status) {
            base.Channel.UpdateAuthorStatus(codeReviewKey, status);
        }
        
        public System.Threading.Tasks.Task UpdateAuthorStatusAsync(string codeReviewKey, Microsoft.Tools.TeamMate.Platform.CodeFlow.Review.AuthorStatus status) {
            return base.Channel.UpdateAuthorStatusAsync(codeReviewKey, status);
        }
        
        public void AuthorPing(string codeReviewKey, string messageFromAuthor) {
            base.Channel.AuthorPing(codeReviewKey, messageFromAuthor);
        }
        
        public System.Threading.Tasks.Task AuthorPingAsync(string codeReviewKey, string messageFromAuthor) {
            return base.Channel.AuthorPingAsync(codeReviewKey, messageFromAuthor);
        }
    }
}
