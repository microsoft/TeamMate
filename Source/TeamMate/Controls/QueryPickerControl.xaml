<!--
Copyright (c) Microsoft Corporation.
Licensed under the MIT License.
-->

<UserControl
    x:Class="Microsoft.Tools.TeamMate.Controls.QueryPickerControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fwc="clr-namespace:Microsoft.Tools.TeamMate.Foundation.Windows.Controls;assembly=Microsoft.Tools.TeamMate.Foundation"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="self"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate x:Key="LoadingTemplate">
            <StackPanel Orientation="Horizontal">
                <fwc:ProgressRing
                                Width="16"
                                Height="16"
                                Margin="0,0,6,0"
                                Size="Custom" />
                <TextBlock>Loading...</TextBlock>
            </StackPanel>

        </DataTemplate>

        <DataTemplate x:Key="ErrorTemplate">
            <StackPanel Orientation="Horizontal">
                <Image
                                Name="icon"
                                Width="16"
                                Height="16"
                                Margin="0,0,6,0"
                                Source="{StaticResource ErrorIcon}"
                                Stretch="Uniform"
                                VerticalAlignment="Top"/>
                <TextBlock TextWrapping="Wrap" MaxWidth="500">
                                <Run Text="An error occurred: "/>
                                <Run Text="{Binding LoadError.Message, Mode=OneWay}" />
                                <Hyperlink Command="{Binding RetryCommand}">Retry</Hyperlink>
                </TextBlock>
            </StackPanel>

        </DataTemplate>
        <HierarchicalDataTemplate x:Key="TreeItemTemplate" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <Image
                                Name="icon"
                                Margin="0,0,6,0"
                                Source="{StaticResource InvalidQueryIcon}"
                                Stretch="None" />
                <TextBlock Text="{Binding Item.Name}" />
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding ItemType}" Value="FlatQuery">
                    <Setter TargetName="icon" Property="Source" Value="{StaticResource FlatQueryIcon}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ItemType}" Value="LinkQuery">
                    <Setter TargetName="icon" Property="Source" Value="{StaticResource LinkQueryIcon}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ItemType}" Value="TreeQuery">
                    <Setter TargetName="icon" Property="Source" Value="{StaticResource TreeQueryIcon}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ItemType}" Value="Folder">
                    <Setter TargetName="icon" Property="Source" Value="{StaticResource FolderIcon}" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsExpanded}" Value="True" />
                        <Condition Binding="{Binding ItemType}" Value="Folder" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="icon" Property="Source" Value="{Binding Source={StaticResource OpenFolderIcon}, Mode=OneTime}" />
                </MultiDataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <TreeView
        Name="treeView"
        ItemTemplateSelector="{Binding ElementName=self,
                                       Path=ItemTemplateSelector}"
        ItemsSource="{Binding Children}">
        <TreeView.Resources>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            </Style>
        </TreeView.Resources>
    </TreeView>
</UserControl>
