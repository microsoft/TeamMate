<!--
Copyright (c) Microsoft Corporation.
Licensed under the MIT License.
-->

<Window x:Class="Microsoft.Tools.TeamMate.Windows.CustomToastWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:fw="clr-namespace:Microsoft.Tools.TeamMate.Foundation.Windows;assembly=Microsoft.Tools.TeamMate.Foundation"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tmr="clr-namespace:Microsoft.Tools.TeamMate.Resources"
        x:Name="self"
        Width="385"
        Height="90"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        ShowActivated="False"
        ShowInTaskbar="False"
        Topmost="True"
        WindowStyle="None"
        d:DataContext="{x:Static tmr:SampleData.ToastViewModel}"
        mc:Ignorable="d">
    <Window.Style>
        <Style TargetType="Window">
            <!--
            <Setter Property="Background" Value="#F2F2F2"/>
            -->
            <Setter Property="Background" Value="#0071C6" />
            <Setter Property="TextBlock.Foreground" Value="White" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Background, Converter={x:Static fw:Converters.Boolean}}" Value="True">
                    <Setter Property="Background" Value="{Binding Background}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Foreground, Converter={x:Static fw:Converters.Boolean}}" Value="True">
                    <Setter Property="Foreground" Value="{Binding Foreground}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Storyboard x:Key="fadeInStoryboard" Name="fadeInStoryboard">
            <DoubleAnimation Duration="00:00:01"
                             From="0"
                             Storyboard.TargetProperty="(UIElement.Opacity)"
                             To="1" />
            <DoubleAnimation BeginTime="00:00:06"
                             Duration="00:00:01"
                             Storyboard.TargetProperty="(UIElement.Opacity)"
                             To="0" />
        </Storyboard>
        <Storyboard x:Key="fadeInOnMouseEnterStoryboard" Name="fadeInOnMouseEnterStoryboard">
            <DoubleAnimation Duration="00:00:01"
                             Storyboard.TargetProperty="(UIElement.Opacity)"
                             To="1" />
        </Storyboard>
        <Storyboard x:Key="fadeOutStoryboard"
                    Name="fadeOutStoryboard"
                    BeginTime="00:00:01">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard Storyboard="{StaticResource fadeInStoryboard}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseEnter">
            <BeginStoryboard Storyboard="{StaticResource fadeInOnMouseEnterStoryboard}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
            <BeginStoryboard Storyboard="{StaticResource fadeOutStoryboard}" />
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <Grid TextBlock.FontSize="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image Grid.RowSpan="3"
                   MaxWidth="{Binding ElementName=self,
                                      Path=Height}"
                   Margin="0,0,-10,0"
                   Source="{Binding Photo}"
                   Visibility="{Binding Photo,
                                        Converter={x:Static fw:Converters.Visibility}}" />

            <TextBlock Grid.Column="1"
                       MaxHeight="70"
                       Margin="20,0,12,0"
                       VerticalAlignment="Center"
                       TextTrimming="CharacterEllipsis"
                       TextWrapping="Wrap"
                       fw:UI.ShowToolTipWhenTrimmed="True">
                <Run FontWeight="Semibold" Text="{Binding Title}" />
                <LineBreak />
                <Run FontWeight="Light" Text="{Binding Description}" />
            </TextBlock>

            <Canvas Name="closeImage"
                    Grid.Column="2"
                    Margin="10,10,19,10"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    IsHitTestVisible="True">
                <Path Data="M0,0 9,9"
                      Stroke="{Binding ElementName=self,
                                       Path=(TextBlock.Foreground)}"
                      StrokeThickness="2" />
                <Path Data="M0,9 9,0"
                      Stroke="{Binding ElementName=self,
                                       Path=(TextBlock.Foreground)}"
                      StrokeThickness="2" />
                <Canvas.Style>
                    <Style TargetType="Canvas">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=self, Path=IsMouseOver}" Value="False">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Canvas.Style>
            </Canvas>

            <Image Grid.Column="2"
                   MaxWidth="32"
                   MaxHeight="32"
                   Margin="0,0,20,10"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Bottom"
                   Source="{Binding Icon}"
                   Stretch="Uniform"
                   Visibility="{Binding Icon,
                                        Converter={x:Static fw:Converters.Visibility}}" />
        </Grid>
        <Border BorderBrush="#DFDFDF"
                BorderThickness="2"
                Opacity="0.6" />
    </Grid>
</Window>
